using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using Tao.Metadata.Tables;

namespace Tao.Metadata
{
    public abstract class Index : IIndex
    {
        public class Narrow : Index
        {
            public this(value : ushort)
            {
                Value = value;
            }
            
            public Value : ushort { get; set; }
            
            public override ToUInt16() : ushort
            {
                Value;
            }
            
            public override ToUInt32() : uint
            {
                Value;
            }
        }

        public class Wide : Index
        {
            public this(value : uint)
            {
                Value = value;
            }           
            public Value : uint { get; set; }
            
            public override ToUInt16() : ushort                
            {
                Value :> ushort;
            }
            
            public override ToUInt32() : uint
            {
                Value;
            }
        }
        
        public abstract ToUInt16() : ushort;
        public abstract ToUInt32() : uint;
        
        public static FromSimpleToken(tableId : TableId, row : uint) : Index
        {
            def encoder = SimpleTokenEncoder();
            def token = encoder.Encode(tableId, row);
            
            Index.Wide(token);
        }
        public static FromCodedToken(tokenType : CodedTokenType, tableId : TableId, row : uint) : Index
        {
            def encoder = CodedTokenEncoder();
            def token = encoder.Encode(tokenType, tableId, row);
            
            Index.Wide(token);
        }
    }  
}
