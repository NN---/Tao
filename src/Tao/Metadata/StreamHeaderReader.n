using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Tao.Interfaces;

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace Tao
{
  public class StreamHeaderReader : IStreamHeaderReader
  {
    public Read(count: ushort, [NotNull] inputStream : Stream) : IEnumerable.[IStreamHeader]
    {
      def results = List.[IStreamHeader]();
      def reader = BinaryReader(inputStream);
      def stringReader = PaddedNullTerminatedStringReader();
      for(mutable i = 0; i < count; i++)
      {
        def header = StreamHeader();
        header.Offset = reader.ReadUInt32();
        header.Size = reader.ReadUInt32();
                      
        def maxLength : long = 32;                
        def name = stringReader.Read(maxLength :> uint, inputStream);
        
        header.Name = name;
      
        results.Add(header);
      }
      
      results;
    }    
  }
}
