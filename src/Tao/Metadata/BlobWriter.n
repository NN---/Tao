using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

namespace Tao.Metadata
{
    public class BlobWriter : IBlobWriter
    {
        public Write([NotNull] blobData : Stream, [NotNull] outputStream : Stream) : uint
        {
            // The blob index will mark the start write position
            def blobIndex = outputStream.Position :> uint;
            
            // Write the blob length as a compressed integer
            def length = blobData.Length :> uint;
            def integerWriter = CompressedIntegerWriter();
            integerWriter.WriteInteger(length, outputStream);
            
            def blobBytes = blobData.ReadAllBytes();

            def writer = BinaryWriter(outputStream);
            writer.Write(blobBytes);           

            blobIndex;
        }
    }
}
