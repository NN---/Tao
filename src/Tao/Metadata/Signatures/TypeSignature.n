using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

namespace Tao
{
    public partial class TypeSignature : TypeSpecBase, ITypeSignature
    {
        public this() 
        {
            base();
        }
        public this(elementType : ElementType)
        {
            ElementType = elementType;
        }
        protected override SupportsElement(elementType : ElementType) : bool
        {
            def supportedElements = HashSet.[ElementType]();
            def addElement : Action.[ElementType] = e => 
            {
                _ = supportedElements.Add(e);
            }

            addElement(ElementType.Boolean);
            addElement(ElementType.Char);
            addElement(ElementType.I1);
            addElement(ElementType.U1);
            addElement(ElementType.I2);
            addElement(ElementType.U2);

            addElement(ElementType.I4);
            addElement(ElementType.U4);

            addElement(ElementType.I8);
            addElement(ElementType.U8);

            addElement(ElementType.R4);
            addElement(ElementType.R8);

            addElement(ElementType.IntPtr);
            addElement(ElementType.UIntPtr);

            supportedElements.Contains(elementType);            
        }        
    }
}
