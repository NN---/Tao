using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using Tao.Metadata.Tables;
namespace Tao.Metadata.Tables.Rows
{
  public static class HasCustomAttributeExtensions
  {
      public GetCustomAttributeRows([NotNull] this parent: IHasCustomAttributeRow, [NotNull] tablesHeap : ITablesHeap) : IEnumerable.[CustomAttributeRow]
        ensures value != null
      {
          def parentTable = parent.TableId;
          def parentRow = parent.RowIndex;
          
          def attributeRows = tablesHeap.GetRows.[CustomAttributeRow]();
          def results = List.[CustomAttributeRow]();
          foreach(row in attributeRows)
          {
              def parentRef = row.GetParentRowReference();
              when(parentRef.TableId == parentTable && parentRef.Row == parentRow)
              {
                  results.Add(row);
              }
          }
          results;
      }
  }
}
