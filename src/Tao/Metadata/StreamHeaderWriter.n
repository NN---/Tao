using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Tao.Interfaces;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

namespace Tao
{
  public class StreamHeaderWriter : IStreamHeaderWriter
  {
    public Write([NotNull] headers : IEnumerable[IStreamHeader], [NotNull] outputStream : Stream) : void        
    {
      def writer = BinaryWriter(outputStream);
      def stringWriter = PaddedNullTerminatedStringWriter();
      foreach(header in headers)
      {
        writer.Write(header.Offset);
        writer.Write(header.Size);
              
        def name : string = header.Name;
        when (string.IsNullOrEmpty(name))
        {
          throw BadImageFormatException("Invalid Metadata StreamHeader name");
        }
        stringWriter.Write(name, outputStream);              
      }
    }          
  }
}
