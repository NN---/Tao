using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace Tao
{
  public class OptionalHeaderStandardFieldsWriter
  {
    public Write([NotNull] fields : OptionalHeaderStandardFields, [NotNull] outputStream : Stream) : void
        ensures outputStream.Length > 0
    {
      def writer = BinaryWriter(outputStream);
      writer.Write(fields.ImageType :> ushort);
      writer.Write(fields.MajorLinkerVersion);
      writer.Write(fields.MinorLinkerVersion);
      writer.Write(fields.SizeOfCode);
      writer.Write(fields.SizeOfInitializedData);
      writer.Write(fields.SizeOfUninitializedData);
      writer.Write(fields.AddressOfEntryPoint);
      writer.Write(fields.BaseOfCode);
      
      unless (fields.ImageType == ImageType.PE32Plus)
      {
        def baseOfData = fields.BaseOfData.Value;
        writer.Write(baseOfData);
      }
    }
  }
}
