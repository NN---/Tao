using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Tao;
using Tao.Interfaces;
using System;
using System.Collections.Generic;
using System.Linq;

namespace Tests
{
  public class TypeDefTableWriteTests : TableWriterTest[TypeDefRow, TypeDefTable]
  {
    public ShouldWriteFlags() : void
    {
      def rowIndex = 0;
      TestWrite.[uint](rowIndex, 0, r => r.Flags, "Wrong Flags");
    }
    public ShouldWriteName() : void
    {
      def rowIndex = 0;
      TestWrite(rowIndex,Index.Narrow(1), r => r.TypeName, "Wrong TypeName");
    }
    public ShouldWriteNamespace() : void
    {
      def rowIndex = 0;
      TestWrite(rowIndex,Index.Narrow(0), r => r.TypeNamespace, "Wrong TypeNamespace");
    }
    public ShouldWriteExtends() : void
    {
      def rowIndex = 0;
      TestWrite(rowIndex,Index.Narrow(0), r => r.Extends, "Wrong Extends");
    }
    public ShouldWriteFieldList() : void
    {
      def rowIndex = 0;
      TestWrite(rowIndex,Index.Narrow(1), r => r.FieldList, "Wrong FieldList");
    }
    public ShouldWriteMethodList() : void
    {
      def rowIndex = 0;
      TestWrite(rowIndex,Index.Narrow(1), r => r.MethodList, "Wrong MethodList");
    }
    
    protected override GetTableStreamData() : array[byte]
    {
    array[
        0x00 : byte, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x45, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
	    0x00, 0xFA, 0x01, 0x33, 0x00, 0x16, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
	    0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x01, 0x00, 0x00, 0x00,
	    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
	    0x50, 0x20, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x17, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
	    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	    0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ];
    }
  }
}
