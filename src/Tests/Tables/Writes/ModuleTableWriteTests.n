using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Tao;
using Tao.Interfaces;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;
namespace Tests
{
    public class ModuleTableWriteTests : TableWriterTest[ModuleRow, ModuleTable]
    {
        public ShouldBeAbleToWriteGeneration() : void
        {          
            def rowIndex = 0;
            TestWrite.[uint](rowIndex, 0 : uint, r => r.Generation, "Wrong Generation");
        }        
        public ShouldBeAbleToWriteName() : void
        {
            def rowIndex = 0;
            TestWrite(rowIndex, Index.Narrow(0xA), r => r.Name, "Wrong Name");
        }
        public ShouldBeAbleToWriteMvid() : void
        {
            def rowIndex = 0;
            TestWrite(rowIndex, Index.Narrow(1), r => r.Mvid, "Wrong Mvid");
        }
        public ShouldBeAbleToWriteEncId() : void
        {
            def rowIndex = 0;
            TestWrite(rowIndex, Index.Narrow(0), r => r.EncId, "Wrong Encid");
        }
        public ShouldBeAbleToWriteEncBaseId() : void
        {
            def rowIndex = 0;
            TestWrite(rowIndex, Index.Narrow(0), r =>r.EncBaseId, "Wrong EncBaseId");
        }        
        protected override TargetAssemblyFileName : string
        {
            get
            {
                @"..\..\SampleBinaries\Skeleton.exe";
            }
        } 
    }
}
