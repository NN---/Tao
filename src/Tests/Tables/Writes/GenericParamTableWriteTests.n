using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Tao;
using Tao.Interfaces;
using System;
using System.Collections.Generic;
using System.Linq;

namespace Tests
{
    public class GenericParamTableWriteTests : TableWriterTest[GenericParamRow, GenericParamTable]
    {
        public this()
        {
            base(TableId.GenericParam);
        }
        public ShouldWriteNumber() : void
        {
            TestWrite.[ushort](15, 1, r => r.Number, "Invalid Number");
        }
        public ShouldWriteFlags() : void
        {
            TestWrite.[ushort](50, 0x10, r => r.Flags, "Invalid Flags");
        }
        public ShouldWriteOwner() : void
        {
            TestWrite(70, Index.Narrow(0x0386), r => r.Owner, "Invalid Owner");
        }
        public ShouldWriteName() : void
        {
            TestWrite(70, Index.Wide(0x0000002A), r => r.Name, "Invalid Name");
        }
        
        protected override TargetAssemblyFileName : string
        {
            get
            {
                @"..\..\SampleBinaries\NHibernate.dll";
            }
        }
    }
}
