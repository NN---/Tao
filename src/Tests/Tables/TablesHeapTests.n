using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Tao;
using Tests.Macros;
using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

namespace Tests
{
    public class TableHeapTests : FileBasedTableTest
    {
        public ShouldHaveCorrectMajorVersion() : void
        {
            def heap = TablesHeap();
            def tableData = MemoryStream(base.GetTableStreamData());
            heap.ReadFrom(tableData);

            heap.MajorVersion.ShouldBeEqualTo(2, "Invalid MajorVersion");            
        }
        public ShouldHaveCorrectMinorVersion() : void
        {
            def heap = TablesHeap();
            def tableData = MemoryStream(base.GetTableStreamData());
            heap.ReadFrom(tableData);

            heap.MinorVersion.ShouldBeEqualTo(0, "Invalid MinorVersion");            
        }
        public ShouldHaveMatchingTableDataForReadsAndWrites() : void
        {            
            def tableData = MemoryStream(base.GetTableStreamData());
            
            def tableStreams = Dictionary.[TableId, array[byte]]();
            def tableReader = TracingTableReader(TableReader(), tableStreams);
            def tableWriter = TracingTableWriter(TableWriter(), tableStreams);
            
            def heap = TablesHeap(AggregateTable(tableReader, tableWriter));
            heap.ReadFrom(tableData);

            def tableDataLength = tableData.Length;
            def slackSpace = tableDataLength - tableData.Position;
            when(slackSpace > 0)
            {
                Console.WriteLine("Note: There's a slack space of {0} bytes", slackSpace);
            }
            
            def outputStream = MemoryStream();
            outputStream.Seek(0);
            tableData.Seek(0);
            
            heap.WriteTo(outputStream);       
            
            tableData.Length.ShouldBeEqualTo(outputStream.Length, "The two streams should have exactly the same length");
            outputStream.ShouldMatch(tableData);
        }       
        public ShouldHaveMatchingTableHeaders() : void
        {
            def tableData = MemoryStream(base.GetTableStreamData());
            def reader = MetadataTablesHeaderReader();            
            def header = reader.Read(tableData);
            

            def outputStream = TracerStream(tableData, MemoryStream());
            
            def headerSize = tableData.Position :> int;
            def expectedHeaderData = MemoryStream(tableData.ReadBytes(headerSize, 0));
            
            def writer = MetadataTablesHeaderWriter();
            writer.Write(header, outputStream);
            
            def actualHash = outputStream.GetHash();
            expectedHeaderData.ShouldMatch(outputStream);
        }
        
        protected override TargetAssemblyFileName : string
        {
            get
            {
                @"..\..\SampleBinaries\NHibernate.dll";
            }
        }
    }
}
