using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Tao;
using Tao.Interfaces;
using Tests.Macros;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

namespace Tests
{
  public class AggregateTableTests
  {
    public ShouldFailReadOperationWhenGivenRowCountForTableThatCannotBeRead() : void
        expects NotSupportedException
    {
      def supportedTables = HashSet.[IMetadataTable]();
      def table = AggregateTable(supportedTables);
      def rowCounts = Dictionary.[TableId, uint]();
      rowCounts[TableId.File] = 12345;
          
      table.Read(0, rowCounts, array(0) : array[TableId], Dictionary(), MemoryStream());
    }
    public ShouldFailWriteOperationWhenGivenRowCountForTableThatCannotBeWritten() : void
        expects NotSupportedException
    {
      def supportedTables = HashSet.[IMetadataTable]();
      def table = AggregateTable(supportedTables);
      def rowCounts = Dictionary.[TableId, uint]();
      rowCounts[TableId.File] = 12345;
      
      table.Write(array(0) : array[HeapSizeFlags], rowCounts, MemoryStream());
    }
  }
}
