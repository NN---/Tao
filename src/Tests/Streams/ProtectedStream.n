using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

namespace Tests
{
  public abstract class ProtectedStream : StreamDecorator
    {
        protected this(stream : Stream)
        {
            base(stream);
        }
        public override Write(buffer : array[byte], offset : int, count : int) : void
        {
            def currentPosition = Position :> int;
            when(!CanWriteTo(currentPosition, count))
                OnDuplicateWrite(buffer, offset, count);

            base.Write(buffer, offset, count);
        }
        protected virtual OnDuplicateWrite(buffer : array[byte], offset : int, count : int) : void
        {
            throw InvalidOperationException("You can't write to a write-protected region");
        }
        
        protected abstract CanWriteTo(offset : long, count : int) : bool;
    }
}
