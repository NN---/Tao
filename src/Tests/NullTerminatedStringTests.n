using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Tao;
using Tests.Macros;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

namespace Tests
{  
  public class NullTerminatedReaderTests
  {
      public ShouldReadFromNullTerminatedString() : void
      {
          def expectedText = ".text";
          def inputBytes = array[0x2E : byte, 0x74, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00];
          def inputStream = MemoryStream(inputBytes);
          
          def length : uint = 8;
          def reader = NullTerminatedStringReader();
          def result = reader.Read(8, inputStream);
          
          assert result equals expectedText otherwiseprint "Invalid string";
      }
      
      public ShouldWriteNullTerminatedString() : void
      {
          def inputText = ".text";
          def buffer = array(8) : array[byte];
          def outputStream = MemoryStream(buffer);
          
          def writer = NullTerminatedStringWriter();
          writer.Write(inputText, outputStream);
          
          def expectedBytes = array[0x2E : byte, 0x74, 0x65, 0x78, 0x74, 0x00, 0x00, 0x00];
          def actualBytes = outputStream.ToArray();
          
          def expectedHash = expectedBytes.GetHash();
          def actualHash = actualBytes.GetHash();
          
          assert expectedHash equals actualHash otherwiseprint "Invalid null terminated string";
      }
  }
}
