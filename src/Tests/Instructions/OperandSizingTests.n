using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

using Tao;
using Tao.Interfaces;
using Tao.Metadata;
using Tao.Metadata.Instructions;
using Tao.Metadata.Instructions.Operands;

using Tests.Macros;

namespace Tests
{
  public class OperandSizingTests
  {
      public ShouldReturnCorrectOperandSizeForShortInlineVarOperand() : void
        {
            TestOperandSize.[ShortInlineVarOperandSizer](2);
        }
        public ShouldReturnCorrectOperandSizeForShortInlineIOperand() : void 
        {
            TestOperandSize.[ShortInlineIOperandSizer](1);
        }        
        public ShouldReturnCorrectOperandSizeForInlineIOperand() : void
        {
            TestOperandSize.[InlineIOperandSizer](2);
        }        
        public ShouldReturnCorrectOperandSizeForInlineI8Operand() : void
        {
            TestOperandSize.[InlineI8OperandSizer](8);
        }
        public ShouldReturnCorrectOperandSizeForShortInlineROperand() : void 
        {      
            TestOperandSize.[ShortInlineROperandSizer](4);
        }
        public ShouldReturnCorrectOperandSizeForInlineROperand() : void
        {
            TestOperandSize.[InlineROperandSizer](8);
        }
        public ShouldReturnCorrectOperandSizeForInlineMethodOperand() : void
        {
            TestOperandSize.[InlineMethodOperandSizer](4);
        }
        public ShouldReturnCorrectOperandSizeForInlineSigOperand() : void
        {
            TestOperandSize.[InlineSigOperandSizer](4);
        }
        public ShouldReturnCorrectOperandSizeForShortInlineBrTargetOperand() : void
        {
            TestOperandSize.[ShortInlineBrOperandSizer](1);
        }
        public ShouldReturnCorrectOperandSizeForInlineBrTargetOperand() : void
        {
            TestOperandSize.[InlineBrOperandSizer](4);
        }
        public ShouldReturnCorrectOperandSizeForInlineSwitchOperand() : void
        {
            TestOperandSize(InlineSwitchOperandSizer(4), 20);
        }
        public ShouldReturnCorrectOperandSizeForInlineTypeOperand() : void
        {
            TestOperandSize.[InlineTypeOperandSizer](4);
        }
        public ShouldReturnCorrectOperandSizeForInlineStringOperand() : void
        {
            TestOperandSize.[InlineStringOperandSizer](4);
        }
        public ShouldReturnCorrectOperandSizeForInlineFieldOperand() : void
        {
            TestOperandSize.[InlineFieldOperandSizer](4);
        }
        public ShouldReturnCorrectOperandSizeForInlineTokenOperand() : void
        {
            TestOperandSize.[InlineTokenOperandSizer](4);
        }
        public ShouldReturnCorrectOperandSizeForInlineVarOperand() : void 
        {
            TestOperandSize.[InlineVarOperandSizer](2);
        }
        private TestOperandSize[TSizer](expectedSize : uint) : void
            where TSizer : IOperandSizer, new()
        {
            def sizer = TSizer();
            TestOperandSize(sizer, expectedSize);
        }
        
         private TestOperandSize[TSizer](sizer : TSizer, expectedSize : uint) : void
            where TSizer : IOperandSizer
        {
            sizer.GetOperandSize().ShouldBeEqualTo(expectedSize, "Wrong Operand Size");
        }
  }
}
