using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Tests.Macros;
using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

using Tao;

namespace Tests
{
  public class StartupStubTests
  {
    public stub ShouldWriteStartupStubForI386Machine() : void
    {
        def imageBase : uint = 0x400000;
        def importAddressTableRva = 0x2000;
        
        def createExpectedStream() : Stream
        {
            def jumpInstruction : ushort = 0x25ff;
            def resultStream = MemoryStream();
            def writer = BinaryWriter(resultStream);
            writer.Write(jumpInstruction);
            
            def value = imageBase + (importAddressTableRva :> uint);
            writer.Write(value);
            
            resultStream;
        }
        
        def outputStream = MemoryStream();
        
        def expectedStream = MemoryStream();
        // TODO: Write the startup stub here
        throw NotImplementedException("TODO: Create the StartupStubWriter implementation");
        
        outputStream.ShouldMatch(createExpectedStream());
    }
    public ignored stub ShouldWriteStartupStubForAmd64Machine() : void
    {
    }    
    public ignored stub ShouldWriteStartupStubForIA64Machine() : void
    {
    }    
    public ignored stub ShouldWriteStartupStubImmediatelyAfterImportDirectoryPosition() : void
    {
    }
  }
}
