using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using Tests.Macros;
using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;

using Tao;
using Tao.Metadata;
using Tao.Metadata.Signatures;
using Tao.Metadata.Tables;
using Tao.Metadata.Tables.Rows;

namespace Tests
{
    public class TypeRefRowTests : FileBasedTableTest
    {                
        public ShouldBeAbleToGetAssociatedAssemblyRow() : void
        {     
            def root = base.GetMetadataRoot();            
            def tableStream = root.Heaps["#~"];

            def heap = TablesHeap();
            heap.ReadFrom(tableStream);

            def stringHeap = root.Heaps["#Strings"];
            
            // Look for the "DebuggingModes" TypeRefRow            
            def row = heap.GetTypeRow.[TypeRefRow]("DebuggingModes", stringHeap);
            row.ShouldBeNotNull("Unable to find the target row");
            
            def assemblyRow = row.GetAssemblyRow(heap);            

            row.TypeName.ToString(stringHeap).ShouldBeEqualTo("DebuggingModes", "wrong target row");
            assemblyRow.Name.ToString(stringHeap).ShouldBeEqualTo("mscorlib", "wrong assembly");
        }
        
        protected override TargetAssemblyFileName : string 
        { 
            get
            {
                "SampleCustomAttributeUsage.dll";
            }
        }
    }
}
